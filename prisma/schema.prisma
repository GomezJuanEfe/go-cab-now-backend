// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(cuid())
  email       String    @unique
  first_name  String
  last_name   String
  password    String
  role        Role      @default(USER)
  address     String?
  phone       String?
  avatar      String?
  car         Cars?
  reset_token String?
  token_exp   DateTime?
  is_active   Boolean   @default(true)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  Trips       Trips[]
}

model Cars {
  id              String       @id @default(cuid())
  car_name        String
  type            String
  img             String?
  seats           Int?
  luggage         Int?
  air_conditioner Boolean?
  transmition     Transmition?
  fare_km         Int?
  driver_id       String       @unique
  driver          User         @relation(fields: [driver_id], references: [id])
  created_at      DateTime     @default(now())
  updated_at      DateTime     @updatedAt
  Trips           Trips[]
}

model Trips {
  id                    String     @id @default(cuid())
  user_id               String
  user                  User       @relation(fields: [user_id], references: [id])
  car_id                String
  car                   Cars       @relation(fields: [car_id], references: [id])
  contact_first_name    String?
  contact_last_name     String?
  contact_email         String?
  contact_phone         String?
  contact_request       String?
  total                 Int?
  date                  DateTime?
  status                TripStatus @default(UPCOMING)
  origin_latitude       String?
  destination_latitude  String?
  origin_longitude      Int?
  destination_longitude Int?
  distance_km           Int?
  Payments              Payments?
}

// Payments - Trips: relación 1-1. En el momento de aplicar cupones, relación: 1 - n
model Payments {
  id      String @id @default(cuid())
  method  String
  amount  Int
  trip_id String @unique
  trip    Trips  @relation(fields: [trip_id], references: [id])
}

// Cambiar por tabla relacion 1 - 1
enum Role {
  USER
  DRIVER
  ADMIN
}

enum Transmition {
  AUTOMATIC
  MANUAL
}

enum TripStatus {
  UPCOMING
  PAST
  CANCELLED
  COMPLETED
}
